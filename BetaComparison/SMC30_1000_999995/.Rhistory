w = matrix(NA, nr = N, nc = T)
W[,1] = dnorm(y[1], mean = 0.35*particle0, sd = sigma2)
w[,1] = W[,1]/sum(W[,1])
ancestor = systematic.resample(w[,1])
particle0 = particle0[ancestor]
particle[,1] = rnorm(N, (1.4*particle0+y[1])/2.5, sd = sigma1)
for(t in 2:T){
W[,t] = dnorm(y[t], mean = 0.35*particle[,t-1], sd = sigma2)
w[,t] = W[,t]/sum(W[,t])
ancestor = systematic.resample(w[,t])
particle[,1:(t-1)] = particle[ancestor,1:(t-1)]
particle[,t] = rnorm(N, (1.4*particle[,t-1]+y[t])/2.5, sd = sigma1)
}
par(mfrow=c(1,1),oma=c(0.2,1.5,0.2,1.5),mar=c(3,2,0.2,2),cex.axis=1,las=1,mgp=c(1,0.5,0),adj=0.5)
plot(1000:1400, particle[1,1000:1400], type = 'l', xlab = '', ylab = '')
for(nn in 2:N){
lines(1000:1400, particle[nn,1000:1400], type = 'l', col = nn, xlab = '', ylab = '')
}
mtext("T", side = 1, cex = 1.2, line = 1.5, outer = FALSE)
mtext(expression(x[t]), side = 2, cex = 1.2, line = 0, outer = TRUE, las = 0)
sigma1 = sqrt(0.08)
sigma2 = sqrt(0.125)
N = 100
particle0 = rnorm(N, 0, 1)
particle = matrix(NA, nr = N, nc = T)
incrementW = rep(NA, N)
W = matrix(NA, nr = N, nc = T)
w = matrix(NA, nr = N, nc = T)
W[,1] = dnorm(y[1], mean = 0.35*particle0, sd = sigma2)
w[,1] = W[,1]/sum(W[,1])
ESS = 1/(sum(w[,1]^2))
if(ESS > N/2){
particle[,1] = rnorm(N, (1.4*particle0+y[1])/2.5, sd = sigma1)
}else{
ancestor = systematic.resample(w[,1])
particle0 = particle0[ancestor]
particle[,1] = rnorm(N, (1.4*particle0+y[1])/2.5, sd = sigma1)
w[,1] = 1/N
}
for(t in 2:T){
incrementW = dnorm(y[t], mean = 0.35*particle[,t-1], sd = sigma2)
W[,t] = incrementW*w[,t-1]
w[,t] = W[,t]/sum(W[,t])
ESS = 1/(sum(w[,t]^2))
if(ESS > N/2){
particle[,t] = rnorm(N, (1.4*particle[,t-1]+y[t])/2.5, sd = sigma1)
}else{
ancestor = systematic.resample(w[,t])
particle[,1:(t-1)] = particle[ancestor,1:(t-1)]
particle[,t] = rnorm(N, (1.4*particle[,t-1]+y[t])/2.5, sd = sigma1)
w[,t] = 1/N
}
}
par(mfrow=c(1,1),oma=c(0.2,1.5,0.2,1.5),mar=c(3,2,0.2,2),cex.axis=1,las=1,mgp=c(1,0.5,0),adj=0.5)
plot(1000:1400, particle[1,1000:1400], type = 'l', xlab = '', ylab = '', ylim = range(particle))
for(nn in 2:N){
lines(1000:1400, particle[nn,1000:1400], type = 'l', col = nn, xlab = '', ylab = '')
}
mtext("T", side = 1, cex = 1.2, line = 1.5, outer = FALSE)
mtext(expression(x[t]), side = 2, cex = 1.2, line = 0, outer = TRUE, las = 0)
sigma1 = sqrt(0.08)
sigma2 = sqrt(0.125)
N = 100
particle0 = rnorm(N, 0, 1)
particle = matrix(NA, nr = N, nc = T)
W = matrix(NA, nr = N, nc = T)
w = matrix(NA, nr = N, nc = T)
W[,1] = dnorm(y[1], mean = 0.35*particle0, sd = sigma2)
w[,1] = W[,1]/sum(W[,1])
ancestor = sample.int(N, prob = w[,1], replace = TRUE)
particle0 = particle0[ancestor]
particle[,1] = rnorm(N, (1.4*particle0+y[1])/2.5, sd = sigma1)
for(t in 2:T){
W[,t] = dnorm(y[t], mean = 0.35*particle[,t-1], sd = sigma2)
w[,t] = W[,t]/sum(W[,t])
ancestor = sample.int(N, prob = w[,t], replace = TRUE)
particle[,1:(t-1)] = particle[ancestor,1:(t-1)]
particle[,t] = rnorm(N, (1.4*particle[,t-1]+y[t])/2.5, sd = sigma1)
}
par(mfrow=c(1,1),oma=c(0.2,1.5,0.2,1.5),mar=c(3,2,0.2,2),cex.axis=1,las=1,mgp=c(1,0.5,0),adj=0.5)
plot(1000:1400, particle[1,1000:1400], type = 'l', xlab = '', ylab = '', ylim = range(particle))
for(nn in 2:N){
lines(1000:1400, particle[nn,1000:1400], type = 'l', col = nn, xlab = '', ylab = '')
}
mtext("T", side = 1, cex = 1.2, line = 1.5, outer = FALSE)
mtext(expression(x[t]), side = 2, cex = 1.2, line = 0, outer = TRUE, las = 0)
library(readr)
log_inf <- read_csv("~/Downloads/1-m-real-time-stock-market-data-nse-bse/log_inf.csv")
View(log_inf)
library(readr)
csvTestImages_3360x1024 <- read_csv("~/Downloads/ahcd1/csvTestImages 3360x1024.csv")
View(csvTestImages_3360x1024)
library(readr)
crime_in_vancouver <- read_csv("~/Downloads/crime-in-vancouver.zip")
View(crime_in_vancouver)
a <- crime_in_vancouver
a
header(a)
head(a)
a$HUNDRED_BLOCK
unique(a$HUNDRED_BLOCK)
head(a)
dim()
dim(a)
a$TYPE
unique(a$TYPE)
a$NEIGHBOURHOOD
unique(a$NEIGHBOURHOOD)
library(SpatioTemporal)
library(plotrix)
library(maps)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
install.packages(SpatioTemporal)
install.packages('SpatioTemporal')
library(SpatioTemporal)
data(mesa.data.raw, package = "SpatioTemporal")
names(mesa.data.raw)
options(digits = 4)
head(mesa.data.raw$obs)
head(mesa.data.raw$X)
mesa.data <- createSTdata(mesa.data.raw$obs, mesa.data.raw$X, SpatioTemporal = list(lax.conc.1500 = mesa.data.raw$lax.conc.1500))
print(mesa.data)
plot(mesa.data, "loc")
plot(mesa.data$covars$long, mesa.data$covars$lat, pch = c(24, 25)[mesa.data$covars$type],
bg = c("red", "blue")[mesa.data$covars$type], xlab = "Longitude", ylab = "Latitude")
map("county", "california", col = "#FFFF0055", fill = TRUE, add = TRUE)
legend("bottomleft", c("AQS", "FIXED"), pch = c(24, 25), bty = "n", pt.bg = c("red",
"blue"))
par(mfrow = c(3, 1), mar = c(2.5, 2.5, 3, 1))
plot(mesa.data, "obs", ID = "60370002")
plot(mesa.data, "obs", ID = "60371201")
plot(mesa.data, "obs", ID = "L002")
D <- createDataMatrix(mesa.data)
D
SVD.cv <- SVDsmoothCV(D, 1:5)
print(SVD.cv)
plot(SVD.cv)
print(mesa.data)
par(mfrow = c(3, 1), mar = c(2.5, 2.5, 3, 1))
plot(mesa.data, "obs", ID = "60370002")
plot(mesa.data, "obs", ID = "60371201")
plot(mesa.data, "obs", ID = "L002")
par(mfrow = c(3, 1), mar = c(2.5, 2.5, 3, 1))
plot(mesa.data, "res", ID = "60370002")
plot(mesa.data, "res", ID = "60371201")
plot(mesa.data, "res", ID = "L002")
par(mfcol = c(2, 2), mar = c(2.5, 2.5, 3, 0.5))
plot(mesa.data, "acf", ID = "60370002")
plot(mesa.data, "acf", ID = "60371201")
plot(mesa.data, "acf", ID = "60375001")
plot(mesa.data, "acf", ID = "L002")
beta <- estimateBetaFields(mesa.data)
str(beta)
estimateBetaFields(mesa.data)
plot(SVD.cv, pairs = TRUE)
print(SVD.cv)
plot(SVD.cv)
SVD.cv <- SVDsmoothCV(D, 1:5)
head(SVD.cv)
plot(SVD.cv, pairs = TRUE)
par(mfrow = c(3, 1), mar = c(2.5, 2.5, 3, 1))
plot(mesa.data, "obs", ID = "60370002")
plot(mesa.data, "obs", ID = "60371201")
plot(mesa.data, "obs", ID = "L002")
par(mfrow = c(3, 1), mar = c(2.5, 2.5, 3, 1))
plot(mesa.data, "res", ID = "60370002")
plot(mesa.data, "res", ID = "60371201")
plot(mesa.data, "res", ID = "L002")
par(mfcol = c(2, 2), mar = c(2.5, 2.5, 3, 0.5))
plot(mesa.data, "acf", ID = "60370002")
plot(mesa.data, "acf", ID = "60371201")
plot(mesa.data, "acf", ID = "60375001")
plot(mesa.data, "acf", ID = "L002")
beta <- estimateBetaFields(mesa.data)
str(beta)
mesa.data
?estimateBetaFields
beta <- estimateBetaFields(mesa.model)
data(mesa.model)
beta <- estimateBetaFields(mesa.model)
beta
data(mesa.data)
beta <- estimateBetaFields(mesa.data)
mesa.data
mesa.model
data(mesa.model)
beta <- estimateBetaFields(mesa.model)
str(beta)
par(mfrow = c(2, 2), mgp = c(2.5, 0.75, 0), mar = c(4, 5, 2, 1))
plot(mesa.data$covars$long, beta$beta[, 1], ylab = "beta for constant \ntemporal basis",
xlab = "Longitude")
plot(mesa.data$covars$lat, beta$beta[, 1], ylab = "beta for constant \ntemporal basis",
xlab = "Latitude")
plot(mesa.data$covars$km.to.coast, beta$beta[, 1], ylab = "beta for constant \ntemporal basis",
xlab = "Distance to coast")
plot(mesa.data$covars$log10.m.to.a1, beta$beta[, 1], ylab = "beta for constant \ntemporal basis",
xlab = "Distance to major road")
mesa.model
mesa.data
data(mesa.model)
beta <- estimateBetaFields(mesa.model)
beta
head(mesa.model)
head(mesa.data)
dim(mesa.data)
dim(mesa.model)
####
data(mesa.data)
mesa.data
mesa.model[,1]
beta <- estimateBetaFields(mesa.data)
library(SpatioTemporal)
library(plotrix)
library(maps)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
data(mesa.data.raw, package = "SpatioTemporal")
data(mesa.model)
beta <- estimateBetaFields(mesa.model)
str(beta)
data <- cbind(mesa.data$covars[, c("long", "lat")], beta$beta)
Palette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
sc <- scale_color_gradientn(colours = Palette(100))
plot1 <- ggplot(data = data, aes(x = long, y = lat, colour = const)) + geom_point() +
sc
plot2 <- ggplot(data = data, aes(x = long, y = lat, colour = V1)) + geom_point() +
sc
plot3 <- ggplot(data = data, aes(x = long, y = lat, colour = V2)) + geom_point() +
sc
grid.arrange(plot1, plot2, plot3, nrow = 2)
####
mesa.data <- updateTrend(mesa.data, n.basis = 2)
print(mesa.data)
data(mesa.data)
beta <- estimateBetaFields(mesa.data)
str(beta)
mesa.data <- updateTrend(mesa.data, n.basis = 2)
print(mesa.data)
beta <- estimateBetaFields(mesa.data)
str(beta)
LUR <- list(~log10.m.to.a1 + s2000.pop.div.10000 + km.to.coast, ~km.to.coast,
~km.to.coast)
ST <- "lax.conc.1500"
LUR
names(mesa.data$covars)
cov.beta <- list(covf = "exp", nugget = FALSE)
cov.beta
cov.nu <- list(covf = "exp", nugget = ~type, random.effect = FALSE)
cov.nu
mesa.model <- createSTmodel(mesa.data, LUR = LUR, ST = ST, cov.beta = cov.beta,
cov.nu = cov.nu, locations = locations)
print(mesa.model)
locations <- list(coords = c("x", "y"), long.lat = c("long", "lat"), others = "type")
mesa.model <- createSTmodel(mesa.data, LUR = LUR, ST = ST, cov.beta = cov.beta,
cov.nu = cov.nu, locations = locations)
mesa.model
print(mesa.model)
names(mesa.data$covars)
mesa.data$km.to.coast
mesa.data$obs$km.to.coast
mesa.data
mesa.data$obs
mesa.data$covars
mesa.data$covars
source("http://www.math.ntnu.no/inla/givemeINLA.R")
data(PRprec)
data(PRborder)
logZout <- read.csv("~/phylosmcsampler/state/execs/20.exec/results/logZout.csv", header=FALSE, comment.char="#")
View(logZout)
install.packages(pomp)
install.packages('pomp')
ls
?pomp
library(pomp)
?pomp
pomp(data = data.frame(t = 1:100, y = NA),
times = "t", t0 = 0,
covar = data.frame(t=0:100,K=seq(from=50,to=200,length=101)),
tcovar = "t",
rprocess = discrete.time.sim(Csnippet("double e = rnorm(0,sigma);
n = r*n*exp(1-n/K+e);"), delta.t = 1),
skeleton = map(Csnippet("Dn = r*n*exp(1-n/K);"), delta.t = 1),
rmeasure = Csnippet("y = rpois(n);"),
dmeasure = Csnippet("lik = dpois(y,n,give_log);"),
rprior = Csnippet("r = rgamma(1,1); sigma = rgamma(1,1);"),
dprior = Csnippet("lik = dgamma(r,1,1,1) + dgamma(sigma,1,1,1);
if (!give_log) lik = exp(lik);"),
initializer = Csnippet("n = n_0;"),
toEstimationScale = Csnippet("Tr = log(r); Tsigma = log(sigma);"),
fromEstimationScale = Csnippet("Tr = exp(r); Tsigma = exp(sigma);"),
paramnames = c("n_0", "r", "sigma"),
statenames = "n") -> rick
rick <- simulate(rick, params = c(r=17, sigma = 0.1, n_0 = 50))
plot(rick)
library(ggplot2)
library(Rmisc)
library(Sleuth2)
library(ggpubr)
results2 <- read.csv("~/Desktop/results2.csv")
View(results2)
pwd
getwd()
results2$Time
1102354/164179
2^(0.01)
2^(0.03)
2^(0.1)
2^(0.2)
setwd("~/Desktop/sfu_vault/Phylogeny/AnnealSMC/CedarFile/SMC_alpha/SMC30_1000_9999")
logZ1 <- read.csv('results1/logZout.csv')
logZ1
logZ1 <- read.csv('results2/logZout.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ2
logZ <- rbind(logZ1, logZ2)
logZ
?write.csv
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results1
results <- rbind(results1, results2)
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results <- rbind(results1, results2)
results
write.csv(results, file = 'results.csv')
setwd("~/Desktop/sfu_vault/Phylogeny/AnnealSMC/CedarFile/SMC_alpha/SMC30_1000_99995")
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4)
logZ
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results <- rbind(results1, results2, results3, results4)
write.csv(results, file = 'results.csv')
results
write.csv(results, file = 'results.csv')
setwd("~/Desktop/sfu_vault/Phylogeny/AnnealSMC/CedarFile/SMC_alpha/SMC30_1000_999995")
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5)
logZ
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results <- rbind(results1, results2, results3, results4, results5)
write.csv(results, file = 'results.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5)
logZ
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5)
logZ
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5)
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results <- rbind(results1, results2, results3, results4, results5)
write.csv(results, file = 'results.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5)
logZ
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
logZ
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results5 <- read.csv('results6/results.csv')
results5 <- read.csv('results7/results.csv')
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results6 <- read.csv('results6/results.csv')
results7 <- read.csv('results7/results.csv')
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
write.csv(results, file = 'results.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results6 <- read.csv('results6/results.csv')
results7 <- read.csv('results7/results.csv')
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
write.csv(results, file = 'results.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results6 <- read.csv('results6/results.csv')
results7 <- read.csv('results7/results.csv')
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
write.csv(results, file = 'results.csv')
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
logZ
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
logZ
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
write.csv(logZ, file = 'logZout.csv')
results1 <- read.csv('results1/results.csv')
results2 <- read.csv('results2/results.csv')
results3 <- read.csv('results3/results.csv')
results4 <- read.csv('results4/results.csv')
results5 <- read.csv('results5/results.csv')
results6 <- read.csv('results6/results.csv')
results7 <- read.csv('results7/results.csv')
results <- rbind(results1, results2, results3, results4, results5, results6, results7)
results
write.csv(results, file = 'results.csv')
results
?write.csv
write.csv(results, file = 'results.csv', col.names = TRUE)
results
write.csv(results, file = 'results.csv', row.names = TRUE)
write.csv(results, file = 'results.csv', row.names = FALSE)
logZ1 <- read.csv('results1/logZout.csv')
logZ2 <- read.csv('results2/logZout.csv')
logZ3 <- read.csv('results3/logZout.csv')
logZ4 <- read.csv('results4/logZout.csv')
logZ5 <- read.csv('results5/logZout.csv')
logZ6 <- read.csv('results6/logZout.csv')
logZ7 <- read.csv('results7/logZout.csv')
logZ <- rbind(logZ1, logZ2, logZ3, logZ4, logZ5, logZ6 ,logZ7)
write.csv(logZ, file = 'logZout.csv', row.names = FALSE)
