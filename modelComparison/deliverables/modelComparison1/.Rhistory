logZoutRe <- read.table("aggregatedLogZout.csv")
logZoutRe <- read.csv("aggregatedLogZout.csv")
head(logZoutRe)
?read.csv
logZoutRe <- read.csv("aggregatedLogZout.csv", row.names=null)
head(logZoutRe)
logZoutRe <- read.csv("aggregatedLogZout.csv", row.names=NULL)
head(logZoutRe)
logZoutRe <- read.csv("aggregatedLogZout.csv", row.names=NULL)
head(logZoutRe)
logZoutRe <- read.csv("aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
unique(logZoutRe$X.treeName)
for(i in unique(logZoutRe$X.treeName))
{
print(i)
}
for(i in unique(logZoutRe$X.treeName))
{
print(logZoutRe[logZoutRe$X.treeName==i,])
print(i)
}
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
}
?which
subData$logZ[which(subData$Method == c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR"))]
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
print(subData$logZ[which(subData$Method %in% c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR"))])
}
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
print(annealMethods[logZAnnealledMethod==min(logZAnnealledMethod)])
}
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
print(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)])
}
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
cat(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)], "\n")
}
logZoutRe <- read.csv("../comdelComparison2/aggregatedLogZout.csv")
logZoutRe <- read.csv("../modelComparison2/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6)  print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
cat(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)], "\n")
}
logZoutRe <- read.csv("../modelComparison2/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
cat(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)], "\n")
}
}
logZoutRe <- read.csv("../modelComparison3/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
cat(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)], "\n")
}
}
logZoutRe <- read.csv("../modelComparison1/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
for(i in unique(logZoutRe$X.treeName))
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
cat(annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)], "\n")
}
}
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
uniqueTrees <- unique(logZoutRe$X.treeName)
modelSelectionSummary <- matrix(0,length(uniqueTrees),3)
col.names(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
k <- 1
for(i in uniqueTrees)
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
print(i)
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
modelSelectionSummary[k,] <- c(i, annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)])
k <- k+1
}
}
modelSelectionSummary
col.names(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
k <- 1
for(i in uniqueTrees)
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
modelSelectionSummary[k,] <- c(i, annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)])
k <- k+1
}
}
colNames(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
colnames(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
k <- 1
for(i in uniqueTrees)
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
modelSelectionSummary[k,] <- c(i, annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)])
k <- k+1
}
}
modelSelectionSummary
logZoutRe <- read.csv("../modelComparison2/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
uniqueTrees <- unique(logZoutRe$X.treeName)
modelSelectionSummary <- matrix(0,length(uniqueTrees),3)
colnames(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
k <- 1
for(i in uniqueTrees)
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
modelSelectionSummary[k,] <- c(i, annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)])
k <- k+1
}
}
modelSelectionSummary
logZoutRe <- read.csv("../modelComparison2/aggregatedLogZout.csv")
head(logZoutRe)
ncol(logZoutRe)
annealMethods <- c("ANNEALINGJC","ANNEALINGEvolK2P","ANNEALINGEvolGTR")
ssMethods <- c("SSJC","SSEvolK2P","SSEvolGTR")
uniqueTrees <- unique(logZoutRe$X.treeName)
modelSelectionSummary <- matrix(0,length(uniqueTrees),3)
colnames(modelSelectionSummary) <- c("treeName","modelByASMC","modelBySS")
k <- 1
for(i in uniqueTrees)
{
subData <- logZoutRe[logZoutRe$X.treeName==i,]
if(nrow(subData)==6){
logZAnnealledMethod <- subData$logZ[which(subData$Method %in% annealMethods)]
logZSSMethod <- subData$logZ[which(subData$Method %in% ssMethods)]
modelSelectionSummary[k,] <- c(i, annealMethods[logZAnnealledMethod==max(logZAnnealledMethod)], ssMethods[logZSSMethod==max(logZSSMethod)])
k <- k+1
}
}
modelSelectionSummary
